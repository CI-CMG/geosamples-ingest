name: maven tag release

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: set up git
        run: git config --global user.email bloop@bloop.org && git config --global user.name 'Bloopy McBloopFace'
      - id: version
        run: |
          majorVersion=$(mvn build-helper:parse-version help:evaluate -Dexpression=parsedVersion.majorVersion  -q -DforceStdout)
          minorVersion=$(mvn build-helper:parse-version help:evaluate -Dexpression=parsedVersion.minorVersion  -q -DforceStdout)
          incrementalVersion=$(mvn build-helper:parse-version help:evaluate -Dexpression=parsedVersion.incrementalVersion  -q -DforceStdout)
          nextIncrementalVersion=$(mvn build-helper:parse-version help:evaluate -Dexpression=parsedVersion.nextIncrementalVersion  -q -DforceStdout)
          version="${majorVersion}.${minorVersion}.${incrementalVersion}"
          developmentVersion="${majorVersion}.${minorVersion}.${nextIncrementalVersion}"
          echo "version=${version}" >> "$GITHUB_OUTPUT"
          echo "version=${version}" >> "$GITHUB_ENV"
          echo "developmentVersion=${developmentVersion}" >> "$GITHUB_OUTPUT"
          echo "developmentVersion=${developmentVersion}" >> "$GITHUB_ENV"
      - name: build with maven
        run: |
          mvn -B -s settings.xml \
          build-helper:parse-version \
          -Dgit.password=${{ secrets.RELEASE_PAT }} \
          -Dgit.username=${{ secrets.RELEASE_USERNAME }} \
          -Dresume=false -Dtag='v${{ env.version }}' \
          -DreleaseVersion='${{ env.version }}' \
          -DdevelopmentVersion='${{ env.developmentVersion }}-SNAPSHOT' \
          release:prepare release:perform
        env:
          NVD_API_KEY: ${{ secrets.NVD_API_KEY }}
          SIGN_KEY_PASS: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
          SIGN_KEY: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
      - name: Upload Jar
        uses: actions/upload-artifact@v4
        with:
          name: jar
          path: "geosamples-ingest-service/target/geosamples-ingest-service-${{ env.version }}-exe.jar"
      - name: Upload Zip
        uses: actions/upload-artifact@v4
        with:
          name: zip
          path: "geosamples-ingest-service/target/geosamples-ingest-service-${{ env.version }}.zip"
      - name: Upload Tarball
        uses: actions/upload-artifact@v4
        with:
          name: tar
          path: "geosamples-ingest-service/target/geosamples-ingest-service-${{ env.version }}.tar.gz"
  release:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
      - run: mkdir release
      - run: cp jar/* release/geosamples-ingest-service-${{ needs.build.outputs.version }}-exe.jar
      - run: cp zip/* release/geosamples-ingest-service-${{ needs.build.outputs.version }}.zip
      - run: cp tar/* release/geosamples-ingest-service-${{ needs.build.outputs.version }}.tar.gz
      - name: Update branch release
        uses: eine/tip@master
        with:
          tag: 'v${{ needs.build.outputs.version }}'
          rm: true
          token: ${{ secrets.RELEASE_PAT }}
          files: release/*